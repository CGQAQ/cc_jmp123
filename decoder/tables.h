//
//    JMP123 Porting into c++ 20
//    Copyright (C) 2020  Jason <m.jason.liu@outlook.com>
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License along
//    with this program; if not, write to the Free Software Foundation, Inc.,
//    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//

#ifndef JMP123_TABLES_H
#define JMP123_TABLES_H

#include <array>
#include <cstdint>
#include <vector>
namespace jmp123::decoder {

namespace {

constexpr std::array<std::array<std::array<int, 15>, 3>, 2> kBitrateTable{
    std::to_array<std::array<int, 15>, 3>(
        {// MPEG-1
         // Layer I
         {0, 32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448},
         // Layer II
         {0, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384},
         // Layer III
         {0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320}}),
    std::to_array<std::array<int, 15>, 3>(
        {// MPEG-2/2.5
         // Layer I
         {0, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256},
         // Layer II
         {0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160},
         // Layer III
         {0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160}})};

constexpr std::array<std::array<uint32_t , 4>, 4> kSamplingRateTable{
    std::to_array({11025u, 12000u, 8000u, 0u}),
    std::to_array({0u, 0u, 0u, 0u}),
    std::to_array({22050u, 24000u, 16000u, 0u}),
    std::to_array({44100u, 48000u, 32000u, 0u}),
};

// Layer1也用到factor[]
// ISO/IEC 11172-3 Table 3-B.1
// scalefactor值为'0000 00'..'1111 11'(0..63),应该有64个值.在末尾补一个数0.0f
constexpr std::array kFactor{
    2.00000000000000f, 1.58740105196820f, 1.25992104989487f, 1.00000000000000f,
    0.79370052598410f, 0.62996052494744f, 0.50000000000000f, 0.39685026299205f,
    0.31498026247372f, 0.25000000000000f, 0.19842513149602f, 0.15749013123686f,
    0.12500000000000f, 0.09921256574801f, 0.07874506561843f, 0.06250000000000f,
    0.04960628287401f, 0.03937253280921f, 0.03125000000000f, 0.02480314143700f,
    0.01968626640461f, 0.01562500000000f, 0.01240157071850f, 0.00984313320230f,
    0.00781250000000f, 0.00620078535925f, 0.00492156660115f, 0.00390625000000f,
    0.00310039267963f, 0.00246078330058f, 0.00195312500000f, 0.00155019633981f,
    0.00123039165029f, 0.00097656250000f, 0.00077509816991f, 0.00061519582514f,
    0.00048828125000f, 0.00038754908495f, 0.00030759791257f, 0.00024414062500f,
    0.00019377454248f, 0.00015379895629f, 0.00012207031250f, 0.00009688727124f,
    0.00007689947814f, 0.00006103515625f, 0.00004844363562f, 0.00003844973907f,
    0.00003051757813f, 0.00002422181781f, 0.00001922486954f, 0.00001525878906f,
    0.00001211090890f, 0.00000961243477f, 0.00000762939453f, 0.00000605545445f,
    0.00000480621738f, 0.00000381469727f, 0.00000302772723f, 0.00000240310869f,
    0.00000190734863f, 0.00000151386361f, 0.00000120155435f, 0.0f,
};

constexpr std::array<std::array<std::array<uint8_t, 16>, 2>, 3> kAIDXTable{
    std::to_array<std::array<uint8_t, 16>, 2>(
        {{0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 0},
         {0, 2, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}}),
    std::to_array<std::array<uint8_t, 16>, 2>(
        {{0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0},
         {0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}),
    std::to_array<std::array<uint8_t, 16>, 2>(
        {{0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 1, 1, 1, 1, 0},
         {0, 3, 3, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}})};

// cq_xxx: Layer II classes of quantization, ISO/IEC 11172-3 Table 3-B.4
constexpr std::array kCQ_Steps{3,    5,    7,     9,     15,   31,
                               63,   127,  255,   511,   1023, 2047,
                               4095, 8191, 16383, 32767, 65535};

constexpr std::array kCQ_C{
    1.3333333f, 1.6f,      1.1428571f, 1.77777778f, 1.0666667f,    1.0322581f,
    1.015873f,  1.007874f, 1.0039216f, 1.0019569f,  1.0009775f,    1.0004885f,
    1.0002442f, 1.000122f, 1.000061f,  1.0000305f,  1.00001525902f};

constexpr std::array kCQ_D{0.5f,           0.5f,           0.25f,
                           0.5f,           0.125f,         0.0625f,
                           0.03125f,       0.015625f,      0.0078125f,
                           0.00390625f,    0.001953125f,   0.0009765625f,
                           0.00048828125f, 0.00024414063f, 0.00012207031f,
                           0.00006103516f, 0.00003051758f};

constexpr std::array kCQ_Bits{5, 7,  3,  10, 4,  5,  6,  7, 8,
                              9, 10, 11, 12, 13, 14, 15, 16};

constexpr std::array kBitAlloc_Offset{0, 3, 3, 1, 2, 3, 4, 5};

constexpr std::array kGroup{2, 3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

/*
 * dewin: D[i] * 32767 (i=0..511), 然后重新排序
 * D[]: Coefficients Di of the synthesis window. ISO/IEC 11172-3 ANNEX_B Table
 * 3-B.3
 */
constexpr std::array<std::array<float, 16>, 32> kDewin =
    std::to_array<std::array<float, 16>, 32>(
        {// [32][16]
         {0.0f, -14.5f, 106.5f, -229.5f, 1018.5f, -2576.5f, 3287.0f, -18744.5f,
          37519.0f, 18744.5f, 3287.0f, 2576.5f, 1018.5f, 229.5f, 106.5f, 14.5f},
         {-0.5f, -15.5f, 109.0f, -259.5f, 1000.0f, -2758.5f, 2979.5f, -19668.0f,
          37496.0f, 17820.0f, 3567.0f, 2394.0f, 1031.5f, 200.5f, 104.0f, 13.0f},
         {-0.5f, -17.5f, 111.0f, -290.5f, 976.0f, -2939.5f, 2644.0f, -20588.0f,
          37428.0f, 16895.5f, 3820.0f, 2212.5f, 1040.0f, 173.5f, 101.0f, 12.0f},
         {-0.5f, -19.0f, 112.5f, -322.5f, 946.5f, -3118.5f, 2280.5f, -21503.0f,
          37315.0f, 15973.5f, 4046.0f, 2031.5f, 1043.5f, 147.0f, 98.0f, 10.5f},
         {-0.5f, -20.5f, 113.5f, -355.5f, 911.0f, -3294.5f, 1888.0f, -22410.5f,
          37156.5f, 15056.0f, 4246.0f, 1852.5f, 1042.5f, 122.0f, 95.0f, 9.5f},
         {-0.5f, -22.5f, 114.0f, -389.5f, 869.5f, -3467.5f, 1467.5f, -23308.5f,
          36954.0f, 14144.5f, 4420.0f, 1675.5f, 1037.5f, 98.5f, 91.5f, 8.5f},
         {-0.5f, -24.5f, 114.0f, -424.0f, 822.0f, -3635.5f, 1018.5f, -24195.0f,
          36707.5f, 13241.0f, 4569.5f, 1502.0f, 1028.5f, 76.5f, 88.0f, 8.0f},
         {-1.0f, -26.5f, 113.5f, -459.5f, 767.5f, -3798.5f, 541.0f, -25068.5f,
          36417.5f, 12347.0f, 4694.5f, 1331.5f, 1016.0f, 55.5f, 84.5f, 7.0f},
         {-1.0f, -29.0f, 112.0f, -495.5f, 707.0f, -3955.0f, 35.0f, -25926.5f,
          36084.5f, 11464.5f, 4796.0f, 1165.0f, 1000.5f, 36.0f, 80.5f, 6.5f},
         {-1.0f, -31.5f, 110.5f, -532.0f, 640.0f, -4104.5f, -499.0f, -26767.0f,
          35710.0f, 10594.5f, 4875.0f, 1003.0f, 981.0f, 18.0f, 77.0f, 5.5f},
         {-1.0f, -34.0f, 107.5f, -568.5f, 565.5f, -4245.5f, -1061.0f, -27589.0f,
          35295.0f, 9739.0f, 4931.5f, 846.0f, 959.5f, 1.0f, 73.5f, 5.0f},
         {-1.5f, -36.5f, 104.0f, -605.0f, 485.0f, -4377.5f, -1650.0f, -28389.0f,
          34839.5f, 8899.5f, 4967.5f, 694.0f, 935.0f, -14.5f, 69.5f, 4.5f},
         {-1.5f, -39.5f, 100.0f, -641.5f, 397.0f, -4499.0f, -2266.5f, -29166.5f,
          34346.f, 8077.5f, 4983.f, 547.5f, 908.5f, -28.5f, 66.f, 4.f},
         {-2.f, -42.5f, 94.5f, -678.f, 302.5f, -4609.5f, -2909.f, -29919.f,
          33814.5f, 7274.f, 4979.5f, 407.f, 879.5f, -41.5f, 62.5f, 3.5f},
         {-2.f, -45.5f, 88.5f, -714.f, 201.f, -4708.f, -3577.f, -30644.5f,
          33247.f, 6490.f, 4958.f, 272.5f, 849.f, -53.f, 58.5f, 3.5f},
         {-2.5f, -48.5f, 81.5f, -749.f, 92.5f, -4792.5f, -4270.f, -31342.f,
          32645.f, 5727.5f, 4919.f, 144.f, 817.f, -63.5f, 55.5f, 3.f},
         {-2.5f, -52.f, 73.f, -783.5f, -22.5f, -4863.5f, -4987.5f, -32009.5f,
          32009.5f, 4987.5f, 4863.5f, 22.5f, 783.5f, -73.f, 52.f, 2.5f},
         {-3.f, -55.5f, 63.5f, -817.f, -144.f, -4919.f, -5727.5f, -32645.f,
          31342.f, 4270.f, 4792.5f, -92.5f, 749.f, -81.5f, 48.5f, 2.5f},
         {-3.5f, -58.5f, 53.f, -849.f, -272.5f, -4958.f, -6490.f, -33247.f,
          30644.5f, 3577.f, 4708.f, -201.f, 714.f, -88.5f, 45.5f, 2.f},
         {-3.5f, -62.5f, 41.5f, -879.5f, -407.f, -4979.5f, -7274.f, -33814.5f,
          29919.f, 2909.f, 4609.5f, -302.5f, 678.f, -94.5f, 42.5f, 2.f},
         {-4.f, -66.f, 28.5f, -908.5f, -547.5f, -4983.f, -8077.5f, -34346.f,
          29166.5f, 2266.5f, 4499.f, -397.f, 641.5f, -100.f, 39.5f, 1.5f},
         {-4.5f, -69.5f, 14.5f, -935.f, -694.f, -4967.5f, -8899.5f, -34839.5f,
          28389.f, 1650.f, 4377.5f, -485.f, 605.f, -104.f, 36.5f, 1.5f},
         {-5.f, -73.5f, -1.f, -959.5f, -846.f, -4931.5f, -9739.0f, -35295.0f,
          27589.0f, 1061.0f, 4245.5f, -565.5f, 568.5f, -107.5f, 34.f, 1.0f},
         {-5.5f, -77.f, -18.f, -981.f, -1003.f, -4875.f, -10594.5f, -35710.0f,
          26767.0f, 499.0f, 4104.5f, -640.f, 532.f, -110.5f, 31.5f, 1.f},
         {-6.5f, -80.5f, -36.f, -1000.5f, -1165.0f, -4796.0f, -11464.5f,
          -36084.5f, 25926.5f, -35.0f, 3955.0f, -707.0f, 495.5f, -112.0f, 29.0f,
          1.0f},
         {-7.0f, -84.5f, -55.5f, -1016.0f, -1331.5f, -4694.5f, -12347.0f,
          -36417.5f, 25068.5f, -541.0f, 3798.5f, -767.5f, 459.5f, -113.5f,
          26.5f, 1.0f},
         {-8.0f, -88.0f, -76.5f, -1028.5f, -1502.0f, -4569.5f, -13241.0f,
          -36707.5f, 24195.0f, -1018.5f, 3635.5f, -822.0f, 424.0f, -114.0f,
          24.5f, 0.5f},
         {-8.5f, -91.5f, -98.5f, -1037.5f, -1675.5f, -4420.0f, -14144.5f,
          -36954.0f, 23308.5f, -1467.5f, 3467.5f, -869.5f, 389.5f, -114.0f,
          22.5f, 0.5f},
         {-9.5f, -95.0f, -122.0f, -1042.5f, -1852.5f, -4246.0f, -15056.0f,
          -37156.5f, 22410.5f, -1888.0f, 3294.5f, -911.0f, 355.5f, -113.5f,
          20.5f, 0.5f},
         {-10.5f, -98.0f, -147.0f, -1043.5f, -2031.5f, -4046.0f, -15973.5f,
          -37315.0f, 21503.0f, -2280.5f, 3118.5f, -946.5f, 322.5f, -112.5f,
          19.0f, 0.5f},
         {-12.0f, -101.0f, -173.5f, -1040.0f, -2212.5f, -3820.0f, -16895.5f,
          -37428.0f, 20588.0f, -2644.0f, 2939.5f, -976.0f, 290.5f, -111.0f,
          17.5f, 0.5f},
         {-13.0f, -104.0f, -200.5f, -1031.5f, -2394.0f, -3567.0f, -17820.0f,
          -37496.0f, 19668.0f, -2979.5f, 2758.5f, -1000.0f, 259.5f, -109.0f,
          15.5f, 0.5f}});

constexpr std::array htbv0{0, 0, 0, 0};

constexpr std::array htbv1 = {-4, 528, 256, 256, 785, 785, 769, 769};

constexpr std::array htbv2 = {  // 20
    -4,   -16,  256,  256,  -8,   -12,  785, 785, 1570, 1538,
    1298, 1298, 1313, 1313, 1312, 1312, 769, 769, 784,  784};

constexpr std::array htbv3 = {  // 16
    -4,   529,  513,  512,  -8,   -12,  784,  784,
    1570, 1538, 1298, 1298, 1313, 1313, 1312, 1312};

constexpr std::array htbv5 = {  // 32
    -4,   -28,  256,  256,  -8,   -24,  785,  785,  -12,  1585, -16,
    -20,  2099, 2083, 1842, 1842, 1811, 1811, 1795, 1795, 1840, 1840,
    1826, 1826, 1554, 1569, 1538, 1568, 769,  769,  784,  784};

constexpr std::array htbv6 = {  // 32
    -4,   -24,  529,  -28,  -8,   -16,  -20,  1042, -12,  1571, 1586,
    1584, 1843, 1843, 1795, 1795, 1299, 1299, 1329, 1329, 1314, 1314,
    1282, 1282, 1057, 1056, 769,  769,  784,  784,  768,  768};

constexpr std::array htbv7 = {  // 72
    -4,   -68,  256,  256,  -8,   -48,  -64,  1041, -12,  -28,  -40,  -44,
    -16,  -20,  -24,  2069, 2645, 2629, 2644, 2643, 2357, 2357, 2372, 2372,
    2341, 2341, 2386, 2386, 2129, -32,  2128, -36,  2309, 2309, 2356, 2356,
    2371, 2371, 2355, 2355, 2084, 2114, 1812, 1812, 1857, 1857, 1856, 1856,
    -52,  -56,  -60,  1554, 2052, 2083, 2098, 2051, 1811, 1811, 1841, 1841,
    1840, 1840, 1826, 1826, 1313, 1313, 1538, 1568, 769,  769,  784,  784};

constexpr std::array htbv8 = {  // 64
    -4,   529,  -60,  512,  -8,   -52,  1042, 1057, -12,  -32,  -44,
    -48,  -16,  -24,  -28,  2069, -20,  2629, 2387, 2387, 2901, 2901,
    2900, 2900, 2613, 2628, 2341, 2341, 2386, 2386, 2309, 2309, 2129,
    -36,  -40,  2084, 2356, 2356, 2371, 2371, 2384, 2384, 2355, 2355,
    2114, 2068, 1857, 1857, 2052, 2112, 2083, 2098, -56,  1570, 1538,
    1568, 2067, 2097, 2051, 2096, 769,  769,  784,  784};

constexpr std::array htbv9 = {  // 72
    -4,   -56,  -64,  -68,  -8,   -36,  -48,  -52,  -12,  -24,  -28,  -32,
    -16,  2101, 2131, -20,  2389, 2389, 2373, 2373, 2388, 2388, 2309, 2309,
    2116, 2085, 2130, 2069, 1873, 1873, 1844, 1844, 1859, 1859, 2128, 2052,
    -40,  -44,  1556, 1601, 1828, 1828, 1858, 1858, 1843, 1843, 1856, 1856,
    1571, 1586, 1299, 1299, 1329, 1329, 1539, 1584, -60,  1042, 1057, 1056,
    1314, 1314, 1282, 1282, 785,  785,  769,  769,  784,  784,  768,  768};

constexpr std::array htbv10 = {  // 124
    -4,   -120, 256,  256,  -8,   -88,  -116, 1041, -12,  -48,  -64,  -80,
    -16,  -32,  -36,  -44,  -20,  -24,  -28,  2631, 2935, 2935, 2919, 2919,
    2934, 2934, 2903, 2903, 2933, 2933, 2918, 2918, 2676, 2646, 2661, 2615,
    2675, 2630, -40,  2659, 2901, 2901, 2900, 2900, 2343, 2343, 2418, 2418,
    -52,  -56,  -60,  2071, 2660, 2567, 2416, 2416, 2402, 2402, 2629, 2613,
    2310, 2310, 2643, 2628, 2161, -68,  -72,  -76,  2358, 2358, 2342, 2342,
    2597, 2642, 2325, 2325, 2385, 2385, 2612, 2627, 2070, 2145, 2144, -84,
    2309, 2309, 2384, 2384, -92,  -104, -108, -112, -96,  -100, 2068, 2113,
    2340, 2340, 2370, 2370, 2355, 2355, 2308, 2308, 2112, 2083, 2098, 2051,
    1811, 1811, 1841, 1841, 1840, 1840, 1826, 1826, 1554, 1569, 1538, 1568,
    769,  769,  784,  784};

constexpr std::array htbv11 = {  // 120
    -4,   -108, -116, 512,  -8,   -60,  -88,  -100, -12,  -36,  -48,  -52,
    -16,  -20,  -28,  -32,  2679, 2663, 2678, 2677, 2662, 2631, 2676, -24,
    2903, 2903, 2901, 2901, 2646, 2661, 2359, 2359, 2419, 2419, 2374, 2374,
    -40,  2087, 2162, -44,  2629, 2644, 2613, 2643, 2404, 2404, 2311, 2311,
    1905, 1905, 2071, 2160, 2102, 2147, 2144, -56,  2372, 2372, 2341, 2341,
    -64,  -72,  -76,  -80,  -68,  2069, 1890, 1890, 2386, 2386, 2309, 2309,
    2086, 2054, 1814, 1814, 1889, 1889, 2129, 2100, 2128, -84,  2084, 2114,
    2371, 2371, 2355, 2355, -92,  -96,  1555, 1585, 2068, 2113, 2052, 2112,
    1827, 1827, 1842, 1842, -104, 1570, 1313, 1313, 1795, 1795, 1840, 1840,
    1042, -112, 785,  785,  1282, 1282, 1312, 1312, 769,  769,  784,  784};

constexpr std::array htbv12 = {  // 128
    -4,   -100, -116, -124, -8,   -52,  -76,  -96,  -12,  -32,  -40,  -44,
    -16,  -20,  -24,  -28,  2679, 2663, 2422, 2422, 2391, 2391, 2421, 2421,
    2406, 2406, 2375, 2375, 2420, 2420, 2405, 2405, 2134, 2103, -36,  2087,
    2419, 2419, 2389, 2389, 2162, 2118, 2148, 2071, 2161, -48,  2102, 2147,
    2311, 2311, 2416, 2416, -56,  -64,  -68,  -72,  2117, 2132, 2116, -60,
    2310, 2310, 2309, 2309, 1830, 1830, 1890, 1890, 1889, 1889, 2070, 2144,
    2101, 2131, 2085, 2130, -80,  -84,  -88,  -92,  1813, 1813, 1873, 1873,
    1844, 1844, 1859, 1859, 2128, 2052, 1828, 1828, 1858, 1858, 1812, 1812,
    1587, 1601, 1571, 1586, -104, -112, 1042, 1057, -108, 1584, 1299, 1299,
    1856, 1856, 1795, 1795, 1329, 1329, 1314, 1314, -120, 1024, 785,  785,
    1282, 1282, 1312, 1312, 769,  769,  784,  784};

constexpr std::array htbv13 = {  // 512
    -4,   -508, 256,  256,  -8,   -416, -484, -504, -12,  -276, -340, -392,
    -16,  -160, -220, -256, -20,  -104, -128, -148, -24,  -56,  -76,  -92,
    -28,  -40,  -44,  -52,  -32,  4351, 4335, 4319, -36,  4861, 4589, 4589,
    5118, 5118, 5116, 5116, 4334, 4303, 4318, 4287, 4347, 4302, 4316, -48,
    4527, 4527, 4585, 4585, 4076, 4076, 4061, 4061, -60,  -64,  -68,  -72,
    4346, 4301, 4030, 4030, 4075, 4075, 3999, 3999, 4089, 4089, 4074, 4074,
    4029, 4029, 4059, 4059, -80,  -84,  -88,  3831, 3983, 3983, 4088, 4088,
    4044, 4044, 4270, 4254, 3982, 3982, 4223, 4222, 3802, -96,  -100, 3695,
    4013, 4013, 4028, 4028, 4043, 4043, 4086, 4086, -108, -112, -116, -124,
    3816, 3679, 3741, 3801, 3829, 3815, 3756, 3771, 3663, 3828, -120, 3827,
    4042, 4042, 4070, 4070, 3391, 3391, 3725, 3800, -132, -136, -140, -144,
    3375, 3375, 3570, 3570, 3694, 3740, 3343, 3343, 3785, 3678, 3499, 3499,
    3709, 3799, 3406, 3406, -152, -156, 3103, 3313, 3784, 3798, 3390, 3390,
    3513, 3513, 3739, 3754, -164, -180, -188, -208, 3312, -168, -172, -176,
    3514, 3514, 3557, 3557, 3556, 3556, 3468, 3468, 3437, 3437, 3555, 3555,
    3298, -184, 3102, 3297, 3374, 3374, 3342, 3342, -192, -196, -200, -204,
    3552, 3552, 3421, 3421, 3541, 3541, 3452, 3452, 3527, 3527, 3405, 3405,
    3467, 3467, 3512, 3512, -212, -216, 3270, 3133, 3540, 3540, 3482, 3482,
    3497, 3497, 3436, 3436, -224, -232, -244, -252, -228, 3117, 3282, 3101,
    3539, 3539, 3451, 3451, 3255, -236, -240, 3267, 3420, 3420, 3525, 3525,
    3481, 3481, 3450, 3450, -248, 3147, 3025, 3025, 3495, 3495, 3479, 3479,
    3085, 3280, 3210, 3240, -260, -264, -268, -272, 3148, 3268, 3179, 3254,
    2876, 2876, 2860, 2860, 3010, 3010, 2907, 2907, 3253, 3209, 2844, 2844,
    -280, -300, -316, -328, -284, -288, -292, -296, 3009, 3009, 3224, 3084,
    3008, 3008, 3252, 3178, 3238, 3193, 2875, 2875, 2995, 2995, 3208, 3162,
    -304, -308, -312, 2738, 2859, 2859, 3237, 3177, 2980, 2980, 3192, 3207,
    2964, 2964, 3191, 3190, 2587, 2737, -320, -324, 2827, 2827, 2992, 2992,
    2966, 2966, 2890, 2890, -332, -336, 2602, 2722, 2874, 2874, 2979, 2979,
    2905, 2905, 2965, 2965, -344, -352, -368, -376, 2586, 2721, -348, 2720,
    2826, 2826, 2920, 2920, -356, 2707, -360, -364, 2950, 2950, 2889, 2889,
    2873, 2873, 2904, 2904, 2949, 2949, 2919, 2919, 2601, 2706, -372, 2616,
    2903, 2903, 2933, 2933, 2691, -380, -384, -388, 2918, 2918, 2887, 2887,
    2932, 2932, 2902, 2902, 2917, 2917, 2931, 2931, -396, -400, -404, -412,
    2329, 2329, 2449, 2449, 2569, 2704, 2632, 2692, 2674, -408, 2344, 2344,
    2886, 2886, 2916, 2916, 2434, 2434, 2328, 2328, -420, -440, -456, -468,
    -424, -428, -432, -436, 2615, 2599, 2327, 2327, 2417, 2417, 2645, 2567,
    2672, 2614, 2659, 2629, 2644, 2598, 2658, 2613, 2177, -444, -448, -452,
    2312, 2312, 2432, 2432, 2326, 2326, 2401, 2401, 2310, 2310, 2400, 2400,
    -460, -464, 2069, 2129, 2643, 2628, 2341, 2341, 2386, 2386, 2309, 2309,
    -472, -476, -480, 2068, 2356, 2356, 2371, 2371, 2384, 2384, 2340, 2340,
    2370, 2370, 2355, 2355, -488, -492, -496, -500, 1857, 1857, 2052, 2112,
    2083, 2098, 1811, 1811, 1841, 1841, 1795, 1795, 1840, 1840, 1826, 1826,
    1554, 1569, 1538, 1568, 1041, 1025, 784,  784};

constexpr std::array htbv15 = {  // 528
    -4,   -460, -512, -524, -8,   -284, -368, -432, -12,  -124, -208, -256,
    -16,  -60,  -84,  -104, -20,  -36,  -52,  -56,  -24,  -28,  3310, -32,
    3583, 3583, 3567, 3567, 3582, 3582, 3551, 3551, 3581, 3581, 3535, 3535,
    -40,  -44,  3323, -48,  3580, 3580, 3550, 3550, 3565, 3565, 3519, 3519,
    3534, 3534, 3564, 3564, 3293, 3247, 3322, 3262, 3307, 3277, 3292, 3231,
    -64,  -68,  -72,  -76,  3321, 3306, 3261, 3291, 3215, 3320, 3276, 3230,
    3305, 3199, 3319, 3245, 3290, 3260, 3183, -80,  3502, 3502, 3343, 3343,
    -88,  -92,  -96,  -100, 3019, 3019, 3062, 3062, 3214, 3304, 3167, 3229,
    3061, 3061, 2942, 2942, 3047, 3047, 2988, 2988, -108, -112, -116, -120,
    3018, 3018, 3003, 3003, 3289, 3213, 2895, 2895, 3060, 3060, 2879, 2879,
    3059, 3059, 3032, 3032, -128, -148, -168, -188, -132, -136, -140, -144,
    3046, 3046, 2863, 2863, 3058, 3058, 3182, 3312, 2847, 2847, 3057, 3057,
    2972, 2972, 3017, 3017, -152, -156, -160, -164, 2910, 2910, 2987, 2987,
    3002, 3002, 3045, 3045, 2941, 2941, 3031, 3031, 2894, 2894, 3044, 3044,
    -172, -176, -180, -184, 2956, 2956, 3016, 3016, 2878, 2878, 2925, 2925,
    3030, 3030, 3043, 3043, 2971, 2971, 3001, 3001, -192, -196, -200, -204,
    2862, 2862, 2986, 2986, 3042, 3042, 2846, 2846, 3041, 3041, 3086, 3296,
    2909, 2909, 3029, 3029, -212, -228, -240, -248, -216, -220, 2772, -224,
    2940, 2940, 3015, 3015, 2893, 2893, 2955, 2955, 3000, 3000, 2970, 2970,
    -232, -236, 2771, 2770, 2985, 2985, 2924, 2924, 3014, 3014, 2877, 2877,
    -244, 2589, 2683, 2743, 2861, 2861, 2829, 2829, 2769, -252, 2757, 2698,
    2908, 2908, 3024, 3024, -260, -264, -272, -280, 2728, 2636, 2756, 2667,
    2742, -268, 2620, 2755, 2969, 2969, 2828, 2828, 2682, 2727, 2726, -276,
    3008, 3008, 2827, 2827, 2498, 2498, 2604, 2651, -288, -308, -328, -348,
    -292, -296, -300, -304, 2741, 2588, 2697, 2712, 2753, 2635, 2740, 2666,
    2619, 2681, 2483, 2483, 2711, 2696, 2603, 2650, -312, -316, -320, -324,
    2482, 2482, 2725, 2587, 2481, 2481, 2736, 2665, 2710, 2634, 2724, 2680,
    2695, 2618, 2467, 2467, -332, -336, -340, -344, 2393, 2393, 2453, 2453,
    2346, 2346, 2466, 2466, 2330, 2330, 2465, 2465, 2570, 2720, 2408, 2408,
    -352, -356, -360, -364, 2438, 2438, 2377, 2377, 2452, 2452, 2361, 2361,
    2451, 2451, 2679, 2569, 2392, 2392, 2437, 2437, -372, -388, -408, -412,
    -376, -380, 2193, -384, 2345, 2345, 2407, 2407, 2422, 2422, 2450, 2450,
    2329, 2329, 2448, 2448, -392, -396, -400, -404, 2376, 2376, 2436, 2436,
    2391, 2391, 2421, 2421, 2360, 2360, 2435, 2435, 2406, 2406, 2375, 2375,
    2088, 2178, 2072, 2177, -416, -420, -424, -428, 2420, 2420, 2312, 2312,
    2432, 2432, 2390, 2390, 2405, 2405, 2359, 2359, 2419, 2419, 2374, 2374,
    -436, -440, -448, -452, 2087, 2162, 2148, 2071, 2133, 2161, -444, 2102,
    2311, 2311, 2416, 2416, 2147, 2117, 2132, 2086, 2146, 2070, -456, 2101,
    2310, 2310, 2400, 2400, -464, -484, -500, -508, -468, -472, -476, -480,
    1889, 1889, 2131, 2116, 1829, 1829, 1874, 1874, 1813, 1813, 1873, 1873,
    2053, 2128, 1844, 1844, -488, -492, 1601, -496, 1859, 1859, 1828, 1828,
    1858, 1858, 1843, 1843, 1812, 1812, 1796, 1796, 1571, 1586, -504, 1555,
    1856, 1856, 1795, 1795, 1585, 1584, 1314, 1314, -516, -520, 785,  785,
    1298, 1298, 1313, 1313, 1282, 1282, 1312, 1312, 1025, 1040, 768,  768};

constexpr std::array htbv16 = {  // 512
    -4,   -508, 256,  256,  -8,   -328, -468, -504, -12,  -52,  -120, -208,
    -16,  -36,  -48,  2303, -20,  -24,  -28,  -32,  3055, 3055, 3070, 3070,
    3039, 3039, 3069, 3069, 3023, 3023, 3068, 3068, 3007, 3007, 3067, 3067,
    2735, -40,  -44,  2703, 3066, 3066, 2975, 2975, 3065, 3065, 3064, 3064,
    2687, 2807, 2671, 2806, -56,  -60,  -64,  2290, 2655, 2805, 2383, 2383,
    2548, 2548, 2547, 2547, 2544, 2544, 2623, -68,  -72,  -92,  -100, -112,
    -76,  -84,  3822, -88,  4302, -80,  4062, 4062, 4588, 4588, 4573, 4573,
    4073, 4073, 4330, 4313, 4077, 4077, 4075, 4075, 3774, 3789, -96,  3758,
    4060, 4060, 4059, 4059, 3788, -104, -108, 3786, 4013, 4013, 4058, 4058,
    3966, 3966, 4012, 4012, -116, 3678, 3517, 3517, 4041, 4041, 3965, 3965,
    -124, 2079, 2289, -128, 2351, 2351, 2319, 2319, -132, -152, -172, -188,
    -136, -140, -144, -148, 3486, 3486, 3772, 3787, 3726, 3816, 3741, 3815,
    3771, 3725, 3800, 3694, 3558, 3558, 3484, 3484, -156, -160, -164, -168,
    3755, 3770, 3813, 3799, 3406, 3406, 3812, 3724, 3528, 3528, 3390, 3390,
    3437, 3437, 3798, 3739, -176, -180, -184, 3299, 3769, 3754, 3553, 3553,
    3540, 3540, 3768, 3753, 3451, 3451, 3767, 3792, -192, -196, -200, -204,
    3342, 3342, 3552, 3552, 3421, 3421, 3541, 3541, 3452, 3452, 3527, 3527,
    3405, 3405, 3467, 3467, -212, -264, -288, -308, -216, -232, -248, -260,
    -220, -224, -228, 3085, 3482, 3482, 3436, 3436, 3526, 3526, 3389, 3389,
    3420, 3420, 3525, 3525, -236, -240, -244, 3132, 3466, 3466, 3496, 3496,
    3481, 3481, 3404, 3404, 3510, 3510, 3450, 3450, -252, 3100, 3264, -256,
    3419, 3419, 3465, 3465, 3480, 3480, 3449, 3449, 3042, 3042, 3118, 3102,
    -268, -272, -280, -284, 3283, 3117, 3282, 3281, 3131, -276, 2845, 2845,
    3479, 3479, 3464, 3464, 3268, 3179, 3267, 3239, 2860, 2860, 3266, 3253,
    -292, -296, -300, -304, 3265, 3084, 3147, 3252, 3178, 3238, 2995, 2995,
    3162, 3237, 2859, 2859, 2994, 2994, 2843, 2843, -312, -316, -320, -324,
    2993, 2993, 3083, 3248, 3177, 3222, 3146, 3236, 3192, 3207, 2979, 2979,
    3130, 3161, 2858, 2858, -332, -392, -432, -452, -336, -352, -368, -376,
    -340, -344, -348, 2722, 3221, 3176, 2977, 2977, 3206, 3191, 2964, 2964,
    3145, 3159, 2919, 2919, 2586, -356, -360, -364, 2826, 2826, 2976, 2976,
    2873, 2873, 2963, 2963, 2904, 2904, 2949, 2949, 2601, 2706, -372, 2585,
    2934, 2934, 2825, 2825, 2705, -380, -384, -388, 2960, 2960, 2888, 2888,
    2948, 2948, 2933, 2933, 2872, 2872, 2947, 2947, -396, -408, -416, -424,
    -400, 2690, -404, 2584, 2918, 2918, 2856, 2856, 2887, 2887, 2932, 2932,
    2689, 2688, -412, 2615, 2824, 2824, 2902, 2902, 2675, -420, 2599, 2674,
    2917, 2917, 2886, 2886, -428, 2567, 2327, 2327, 2916, 2916, 2901, 2901,
    -436, -440, -444, -448, 2417, 2417, 2672, 2614, 2659, 2629, 2644, 2598,
    2402, 2402, 2326, 2326, 2401, 2401, 2566, 2656, -456, -460, 2129, -464,
    2387, 2387, 2613, 2628, 2341, 2341, 2386, 2386, 2325, 2325, 2309, 2309,
    -472, -488, -496, -500, -476, -480, -484, 2068, 2356, 2356, 2371, 2371,
    2384, 2384, 2340, 2340, 2370, 2370, 2355, 2355, 2113, -492, 2083, 2098,
    2308, 2308, 2368, 2368, 1811, 1811, 1841, 1841, 2051, 2096, 1826, 1826,
    1554, 1569, 1538, 1568, 1041, 1025, 784,  784};

constexpr std::array htbv24 = {  // 508
    -4,   -140, -452, -504, -8,   -28,  -48,  1279, -12,  -16,  -20,  -24,
    2287, 2302, 2271, 2301, 2255, 2300, 2239, 2299, 2042, 2042, 2223, 2207,
    2041, 2041, 2040, 2040, -32,  -36,  -40,  -44,  2191, 2175, 2039, 2039,
    1903, 1903, 2038, 2038, 1887, 1887, 2037, 2037, 1871, 1871, 2036, 2036,
    -52,  -56,  -60,  -64,  1855, 1855, 2035, 2035, 1839, 1839, 2034, 2034,
    2033, 2033, 2079, 2288, -68,  -80,  -100, -120, 2319, 2319, -72,  -76,
    3054, 3054, 3038, 3038, 3053, 3053, 3022, 3022, -84,  -88,  -92,  -96,
    3052, 3052, 3037, 3037, 3006, 3006, 3051, 3051, 3021, 3021, 3036, 3036,
    2990, 2990, 3050, 3050, -104, -108, -112, -116, 3005, 3005, 3035, 3035,
    3020, 3020, 2974, 2974, 3049, 3049, 2989, 2989, 3034, 3034, 3004, 3004,
    -124, -128, -132, -136, 3019, 3019, 2958, 2958, 3048, 3048, 2973, 2973,
    3033, 3033, 2942, 2942, 3047, 3047, 2988, 2988, -144, -256, -352, -428,
    -148, -192, -212, -232, -152, -168, -176, -184, -156, -160, -164, 2790,
    3018, 3018, 3003, 3003, 2957, 2957, 3032, 3032, 3086, 3296, 2829, 2829,
    -172, 2761, 2654, 2746, 2926, 2926, 2972, 2972, 2789, -180, 2775, 2788,
    2987, 2987, 2941, 2941, 2700, 2760, -188, 2622, 2894, 2894, 2862, 2862,
    -196, -200, -204, -208, 2669, 2774, 2787, 2715, 2745, 2730, 2786, 2590,
    2785, 2653, 2773, 2684, 2759, 2637, 2699, 2744, -216, -220, -224, -228,
    2772, 2714, 2729, 2668, 2758, 2621, 2771, 2605, 2770, 2589, 2683, 2743,
    2769, 2652, 2757, 2698, -236, -240, -248, -252, 2728, 2713, 2636, 2756,
    2667, 2742, -244, 2620, 3024, 3024, 2828, 2828, 2755, 2682, 2727, 2604,
    2754, 2651, 2741, 2588, -260, -292, -312, -332, -264, -268, -280, -284,
    2697, 2712, 2753, 2635, -272, 2619, -276, 2586, 3008, 3008, 2827, 2827,
    2992, 2992, 2826, 2826, 2484, 2484, 2666, 2726, 2681, 2711, -288, 2704,
    2976, 2976, 2825, 2825, -296, -300, -304, -308, 2483, 2483, 2440, 2440,
    2603, 2650, 2482, 2482, 2725, 2587, 2737, 2665, 2454, 2454, 2468, 2468,
    -316, -320, -324, -328, 2634, 2680, 2439, 2439, 2362, 2362, 2467, 2467,
    2393, 2393, 2453, 2453, 2346, 2346, 2466, 2466, -336, -340, -344, -348,
    2465, 2465, 2408, 2408, 2438, 2438, 2423, 2423, 2377, 2377, 2452, 2452,
    2361, 2361, 2451, 2451, -356, -376, -396, -416, -360, -364, -368, -372,
    2392, 2392, 2437, 2437, 2345, 2345, 2407, 2407, 2422, 2422, 2450, 2450,
    2329, 2329, 2449, 2449, -380, -384, -388, -392, 2376, 2376, 2436, 2436,
    2391, 2391, 2421, 2421, 2360, 2360, 2435, 2435, 2406, 2406, 2344, 2344,
    -400, -404, -408, -412, 2434, 2434, 2328, 2328, 2375, 2375, 2420, 2420,
    2433, 2433, 2568, 2688, 2390, 2390, 2405, 2405, -420, 2163, -424, 2162,
    2327, 2327, 2567, 2672, 2359, 2359, 2343, 2343, -432, -436, -440, -444,
    2118, 2148, 2133, 2161, 2102, 2147, 2117, 2132, 2086, 2146, 2070, 2145,
    -448, 2101, 2131, 2116, 2310, 2310, 2400, 2400, -456, -480, -492, -500,
    -460, -468, -472, -476, 2085, 2130, 2069, -464, 2309, 2309, 2384, 2384,
    1873, 1873, 2100, 2115, 1828, 1828, 1858, 1858, 1843, 1843, 1812, 1812,
    -484, -488, 1555, 1585, 1857, 1857, 2052, 2112, 1827, 1827, 1842, 1842,
    -496, 1570, 1298, 1298, 1795, 1795, 1840, 1840, 1313, 1313, 1538, 1568,
    1041, 1025, 1040, 1024};

constexpr std::array htc0{
    // 80
    -16,  -32,  -48,  -64,  1026, 1025, 1028, 1032, 256,  256,  256,  256,
    256,  256,  256,  256,  1547, 1547, 1547, 1547, 1551, 1551, 1551, 1551,
    1549, 1549, 1549, 1549, 1550, 1550, 1550, 1550, 1543, 1543, 1543, 1543,
    1541, 1541, 1541, 1541, 1289, 1289, 1289, 1289, 1289, 1289, 1289, 1289,
    1286, 1286, 1286, 1286, 1286, 1286, 1286, 1286, 1283, 1283, 1283, 1283,
    1283, 1283, 1283, 1283, 1290, 1290, 1290, 1290, 1290, 1290, 1290, 1290,
    1292, 1292, 1292, 1292, 1292, 1292, 1292, 1292};

constexpr std::array htc1{// 16
                          1039, 1038, 1037, 1036, 1035, 1034, 1033, 1032,
                          1031, 1030, 1029, 1028, 1027, 1026, 1025, 1024};

// ISO/IEC 11172-3 ANNEX B,Table 3-B.6. Layer III Preemphasis
constexpr std::array pretab{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                  1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0};



}  // namespace

extern std::vector<std::vector<uint8_t>> const kNBal;

extern std::vector<std::vector<uint8_t>> const kSBQuant_Offset;

extern std::vector<std::vector<uint8_t>> const kOffsetTable;

extern std::vector<std::vector<float>> kIMDCTWin;
}  // namespace jmp123::decoder
#endif  // JMP123_TABLES_H
